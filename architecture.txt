Идея игры: есть 4 расы воющие друг с другом, но не между собой, находясь в лабиринте. Перемещаясь по лабиринту, можно встретить других игроков или нейтральных юнитов.
Стадия боя начинается, когда встречаются игроки - представители разных классов, либо когда игрок нападает на нейтральный отряд.
Вся боёвка будет похожа на боёвку Героев Меча и Магии, поэтому нужно реализовать в виде ходов на пошаговой клетчатой сетке.

В игре будут использоваться 3 разных состояния игры: перемещение в лабиринте, бой и бой с боссом.
Первая часть реализуется с помощью (ещё ненаписанного) класса CArmy и Maze. Вторая и третья с помощью Fight.

Есть класс Unit, который отвечает за все юниты в игре и описывает их (пока всё минимальное, необходимое в фабриках).
Используются пока что только hp, mana, damage и attack_range.
Можно будет доавлять новые вспомогательные атрибуты, которые также будут прописываться в абстрактной фабрике CArmyFactory.
От класса Unit наследуются 3 типа юнитов: Range, Mage и Melee. Они содержат какие-то свои уникальные свойства (как спэллы у магов и некоторых ближников).
или как дальнобойная атака у рэньжевых юнитов, которая не снимает "обратку").
Юниты четырёх классов содержат разные статы, создаются один раз и далее не усовершествуются.
Поэтому, было выбрано писать Abstract Factory. В папке Factory содержится описание всей её структуры.

Есть абстрактная фабрика CArmyFactory, и наследующиюся от неё фабрики рас (всего 4 разные штуки).
Некоторые методы create фабрик заблокированы (находятся в private), потому что по сути их нет и они не должны создаваться.
Абстрактная фабрика была выбрана из-за необходимости в разделении фабрики на несколько рас, с разными статами.

Также есть специальный юнит БОСС, реализованный на синглтоне, единственный в игре, находящийся в единственной комнате с боссом в лабиринте.
У него будут специальные умения, специальные характеристики, не как у обычных юнитов, поэтому для него создан отдельный класс.
Применение синглтона логично, потому что юнит БОСС будет единственным, и не должен уметь создаваться.
Пока что запушена минимальная реализация, в виде создания класса Boss.

С помощью паттерна COMPOSITE реализован класс CompositeUnit, наследуемый от Unit, и реализующий структуру дерева, в листьях которого находятся Unit-ы.
Используется для описания отрядов, на юнитах одного типа (например, OrcMeleeUnits, то есть в одном отряде юниты только одного класса и одной расы).
Каждый отряд является одним из 10 слотов игроков, реализовано склеивание (merge) двух слотов (TO DO: split).

С помощью паттерна DECORATOR реализован классы BaseDecorator и FactoryDecorator, которые отвечают за расширение фабрик функционалом фабрик, на базах игроков.
(Бесплатность и пополнение юнитов в зависимости от времени). Добавил новый ресурс - монетки, получаемые за нейтральных монстров (TO DO: добавить монстров).

С помощью паттерна COMMAND реализован класс Command, и все классы в папке Commands, наследуемые от него.


Схема архитекутры:
-class Boss: Singleton, драка с Боссом;
-class CArmyFactory and _Race_Factory, наследуемые от неё: Abstract factories;
-classes BaseDecorator and FactoryDecorator: Decorators of abstract factory. Наследуется от СArmyFactory и декорируют его;
-class Maze и MazeCell - реализация лабиринта;
-class Unit - реализацию Unit-a;
-class CompositeUnit, наследуется от Unit - реализация компоновщика (отрядов юнитов);
-class CArmy - армия, управляемая юзерами;
-class Game - все нужные для реализации переменные и классы;
-сlass Command - абстрактный класс, от которого наследуются все команды. Pattern - COMMAND;
-class ParseKey - команда получение ввода от игрока и запуска побочной команды, в зависимости от нажатой клавишы;
-class SlotMerge в SlotComands - склеить два слота (только если они одного типа и непусты);
-classes MazeCreation и MazePrint в MazeCommands - команды для лабиринта;
MazePrint - печатает всю текущую информацию об игре;
MazeCreation - создаёт случайно-сгенерированный лабиринт для class Game;
-class BuyBaseUnits в BaseCommands - запрашивает и получает в свободный слот юниты выбранного типа;